FarmHandReadMe -


This application is built as a demonstration of ability in Java for consideration by future employers. It is my first solo application built from scratch, and is built while juggling a life filled with full time employment, family, and continued education in order to make a career change. 

It is designed at this time as a standalone desktop app to be accessed in person from a central terminal in a common area.

The application's goal is to serve as a means to help a small team manage tasks on a small scale farm or hobby farm.

Functionality to include but not limited to; weather observation, planning tasks in accordance with weather conditions, monitoring progress and completion of tasks. As well, there will be functionality for basic messaging between team members.

The following are production notes and updates. Thank you for reading this and for checking out the project. Cheers!
_________________________________________________________

- 15 June 2021 -

Created weather.db in Weather package with corresponding tables (hourly, daily, weekly) in Java. Application will ship with database ready to be written to.

rough sketch of instrument data to database as follows:

enter data into fields >> click log >>
all table entries to a map or array list
assign field data to variables
create variable last date and last time 
weather addtodatabase method ()
(if)
 time > last time and date == last date >> 
 add current values as hourly entry
(if not)
all hourly values on a seperate thread calculated and stored to daily variables && all current values stored as hourly entry
(if) 
amount of days stored == 7
values of everyday calculated through weekly methods and store as a weekly entry && daily values stored as new daily entry
(if)
days stored  < 7
add daily entry  

repository updated

--------------------------------------------------------

- 14 June 2021 -

At this time have settled on a SQLite database as a means to gather weather data in a central file. This data will be used to offer suggestions in planning out the days chores and compare past conditions. Should be a relatively simple and lightweight solution since program access is isolated.

Have also begun making notes on how database should be initiated and methods that will call data and populate
fields. 

WeatherDB class has been added to Weather package.

"While the unknown often creates the wall of dread that keeps us from moving forward, it should also be the dangling lure that calls us into the depths."
--------------------------------------------------------

- 10 June 2021 - 

Have begun fleshing out weather database structure and proposed functionality. Looking forward to increased development once life stabilizes a bit.

Also optimized font size for station readout and altered getConditions method for better implementation.

Changes pushed to version branch and merged into Master. 

-----------------------------------------------------------

- 3 June 2021 - 

Api is now called, parsed, formatted and displayed on stations sub window. Whew! Functionality for adding new coordinates and getting a read out from nearest station. Most precise coordinates provides most precise results.

Next steps will be logging conditions to a database and make chore reccomendations based on recorded weather trends.

! Future improvements may include calling a more robust weather api. Perhaps NOAA. Might also include calling coordinates by current ip address to create a sort of auto feature instead of manually entering coordinates.

Respository updated.  

--------------------------------------------------

- 31 May 2021 -

Was not receiving desired results and so began re-evaluting means to parse data from JSON response. New discoveries ARE returning desired results and so formatting of desired data has begun. Hooray!

Next steps will include continued formatting followed by setting the data to a label to be displayed on  "Stations" sub window.

"Never forget those who gave their all in order for us to enjoy what we have today."

-------------------------------------------------------------------------------------------- 

- 27 May 2021 -

Found means to parse returned JSON keys and accompanying data. Next steps will include parsing nested data and formatting. Pushed to repository.

----------------------------------------------------------------------------

-19 May 2021-

Began work on methods for Weather sub window. Started with api inclusion for reading data out of a station. Verified obtaining the field input through print out. Next will be a string variable formatted to accept the field values and insert into the url address used for the API call. 

Following will be parsing the returned JSON keys and applying them to a java map and variables in order to log data to the upcoming weather data base and display conditions.

Have decided to hold off on transferring to GIT hub for source control when I have already started with BitBucket.

Have not seen a great difference in functionality and really appreciate that BitBucket isn't trying to log my every sign in or machine. 

Will begin next day of development work with pushing current build into repository.

-------------------------------------------------------------------------------  

- 18 May 2021 -

Relocation mostly complete. Began adding UI for Stations section and fleshed out more of the functionality.
Will be migrating the project to GitHub from BitBucket in near future as per current industry standard. Would love to see that change.


-------------------------------------------------------------

 - 5 May 2021 -

Implemented web viewer with buttons for switching between online weather services. Created WebServicesController and updated WebServices.fxml

Beginning reasearch on JSON parsing. Plan is to implent
Open Weather Map API for stations section. Then it will be on to creating database for logging weather and comparing data. Followed by methods for observations.

Development will be on hold while relocating.

Happy Cinco de Mayo! Vivo la Mexico!


---------------------------------------------------------

- 4 May 2021 -

Began creating user interface for Weather sub window.
 
// Created InstrumentsFXML, InstrumentsController, ObservationsFXML, WebServicesFXML and WebServicesController.

// Implemented WebServicesFXML and InstrumentsFXML in WeatherController in order to switch displays on Weather SubWindow.

//Added instruction to WeatherCSS

! Continue with implementing webview in WebServices and corresponding buttons !

! Look at creating a method in order to quickly create scene changes !   
 
-------------------------------------------------------
 
- 3 May 2021 -

Base template of GUI completed and uploaded to Repository.

// A Main Window for launching 3 sub-windows for Weather, Chores and Inventory with buttons for selecting sub window and minimize and close. 

// Considering swapping Inventory functionality for basic messaging functionality as database integration will be demonstrated in the application through the other sub sets.

Would still like to develop inventory functionality, but at a later time. 
   
